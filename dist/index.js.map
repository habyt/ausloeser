{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,oDAAqC;AACrC,wDAAyC;AAEzC,SAAS,KAAK,CAAC,GAAW;IACtB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA;IAEnB,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAA;AACxB,CAAC;AAED,KAAK,UAAU,IAAI;;IACf,IAAI;QACA,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACnD,OAAM;SACT;QAED,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAA;QAEtC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;QAClC,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;QAExC,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;YACnC,KAAK,oBACD,OAAO,CAAC,UAAU,0CAAE,KAAK,0CAAE,KAAK,mCAChC,KAAK,CAAC,sCAAsC,CAAC;YACjD,IAAI,cACA,OAAO,CAAC,UAAU,0CAAE,IAAI,mCACxB,KAAK,CAAC,qCAAqC,CAAC;YAChD,YAAY,cACR,OAAO,CAAC,KAAK,0CAAE,MAAM,mCACrB,KAAK,CAAC,kCAAkC,CAAC;SAChD,CAAC,CAAA;QAEF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;QAEzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;KAC9C;IAAC,OAAO,CAAC,EAAE;QACR,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAA;QACzB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;KACpB;AACL,CAAC;AAED,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA","sourcesContent":["import * as core from \"@actions/core\"\nimport * as github from \"@actions/github\"\n\nfunction error(msg: string): never {\n    core.setFailed(msg)\n\n    throw new Error(msg)\n}\n\nasync function main() {\n    try {\n        if (github.context.payload.pull_request === undefined) {\n            return\n        }\n\n        const payload = github.context.payload\n\n        const token = core.getInput(\"pat\")\n        const octokit = github.getOctokit(token)\n\n        const issue = await octokit.issues.get({\n            owner:\n                payload.repository?.owner?.login ??\n                error(\"no repository owner found in payload\"),\n            repo:\n                payload.repository?.name ??\n                error(\"no repository name found in payload\"),\n            issue_number:\n                payload.issue?.number ??\n                error(\"no issue number found in payload\"),\n        })\n\n        core.info(JSON.stringify(issue, null, 4))\n\n        core.info(JSON.stringify(payload, null, 4))\n    } catch (e) {\n        core.setFailed(e.message)\n        core.setFailed(e)\n    }\n}\n\nmain().catch((e) => core.setFailed(JSON.stringify(e)))\n"]}