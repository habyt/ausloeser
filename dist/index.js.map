{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,oDAAqC;AACrC,wDAAyC;AAEzC,SAAS,KAAK,CAAC,GAAW;IACtB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA;IAEnB,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAA;AACxB,CAAC;AAEM,KAAK,UAAU,GAAG;;IACrB,IAAI;QACA,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAA;QAEtC,IAAI,OAAA,OAAO,CAAC,KAAK,0CAAE,YAAY,MAAK,SAAS,EAAE;YAC3C,IAAI,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAA;YAC5C,OAAM;SACT;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;QAClC,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;QAExC,MAAM,KAAK,qBACP,OAAO,CAAC,UAAU,0CAAE,KAAK,0CAAE,KAAK,mCAChC,KAAK,CAAC,sCAAsC,CAAC,CAAA;QACjD,MAAM,IAAI,eACN,OAAO,CAAC,UAAU,0CAAE,IAAI,mCACxB,KAAK,CAAC,qCAAqC,CAAC,CAAA;QAEhD,MAAM,UAAU,eACZ,OAAO,CAAC,KAAK,0CAAE,MAAM,mCAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;QAEtE,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;YAClC,KAAK;YACL,IAAI;YACJ,WAAW,EAAE,UAAU;SAC1B,CAAC,CAAA;QAEF,IAAI,UAAU,GAAuB,SAAS,CAAA;QAC9C,IAAI,IAAI,GAAG,CAAC,CAAA;QACZ,OAAO,IAAI,EAAE;YACT,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC;gBACtD,KAAK;gBACL,IAAI;gBACJ,IAAI;gBACJ,QAAQ,EAAE,EAAE;aACf,CAAC,CAAA;YAEF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;YAEpD,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvC,MAAK;aACR;YAED,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAC1C,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAChD,CAAA;YACD,IAAI,QAAQ,KAAK,SAAS,EAAE;gBACxB,UAAU,GAAG,QAAQ,CAAC,EAAE,CAAA;gBACxB,MAAK;aACR;YAED,IAAI,EAAE,CAAA;SACT;QAED,MAAM,EAAE,GAAG,KAAK,CAAC,IAAI,CAAA;QACrB,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAA;QAEvB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAChB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;QAEvB,OAAM;KACT;IAAC,OAAO,CAAC,EAAE;QACR,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QAClB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAA;QACzB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;KACpB;AACL,CAAC;AAnED,kBAmEC;AAED,GAAG,EAAE,CAAA","sourcesContent":["import * as core from \"@actions/core\"\nimport * as github from \"@actions/github\"\n\nfunction error(msg: string): never {\n    core.setFailed(msg)\n\n    throw new Error(msg)\n}\n\nexport async function run() {\n    try {\n        const payload = github.context.payload\n\n        if (payload.issue?.pull_request === undefined) {\n            core.info(\"No PR found in event. Ignoring.\")\n            return\n        }\n\n        const token = core.getInput(\"pat\")\n        const octokit = github.getOctokit(token)\n\n        const owner =\n            payload.repository?.owner?.login ??\n            error(\"no repository owner found in payload\")\n        const repo =\n            payload.repository?.name ??\n            error(\"no repository name found in payload\")\n\n        const pullNumber =\n            payload.issue?.number ?? error(\"no issue number found in payload\")\n\n        const issue = await octokit.pulls.get({\n            owner,\n            repo,\n            pull_number: pullNumber,\n        })\n\n        let workflowId: number | undefined = undefined\n        let page = 0\n        while (true) {\n            const workflows = await octokit.actions.listRepoWorkflows({\n                owner,\n                repo,\n                page,\n                per_page: 50,\n            })\n\n            console.log(JSON.stringify(workflows.data, null, 4))\n\n            if (workflows.data.workflows.length === 0) {\n                break\n            }\n\n            const workflow = workflows.data.workflows.find(\n                (it) => it.path === core.getInput(\"workflow\")\n            )\n            if (workflow !== undefined) {\n                workflowId = workflow.id\n                break\n            }\n\n            page++\n        }\n\n        const pr = issue.data\n        const ref = pr.head.ref\n\n        console.log(ref)\n        console.log(workflowId)\n\n        return\n    } catch (e) {\n        core.info(\"error\")\n        core.setFailed(e.message)\n        core.setFailed(e)\n    }\n}\n\nrun()\n"]}